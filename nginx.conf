user nginx;
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;  # Added a semicolon here

    # Docker Containers Running

    # upstream products-command {
    #     server products-command1:9092;
    #     # server products-command2:8080;
    # }

    # upstream products-query {
    #     server products-query1:9091;
    #     # server products-query2:8080;
    # }


    # upstream reviews-command {
    #     server reviews-command1:9192;
    # #     server reviews-command2:8080;
    # }

    # upstream reviews-query {
    #     server reviews-query1:9191;
    # #     server reviews-query2:8080;
    # }

    upstream votes-command {
        server votes-command1:8091;
    #     server votes-command2:8080;
    }

    upstream votes-query {
        server votes-query1:8090;
    #     server votes-query2:8080;
    }

    server {
        listen 8080;

        # location /auth {
        #     proxy_pass http://products-command;
        # }


        # location /admin {
        #     proxy_pass http://products-command;
        # }


        # location /products {
        #     if ($request_method = GET) {
        #         proxy_pass http://products-query;
        #     }
        #     if ($request_method = POST) {
        #         proxy_pass http://products-command;
        #     }
        #     if ($request_method = PUT) {
        #         proxy_pass http://products-command;
        #     }
        #     if ($request_method = DELETE) {
        #         proxy_pass http://products-command;
        #     }
        #     if ($request_method = PATCH) {
        #         proxy_pass http://products-command;
        #     }
        # }

        # # location ~ ^/products/(?<string>[a-zA-Z0-9]+)/reviews$ {
        # #     if ($request_method = GET) {
        # #         proxy_pass http://reviews-query/products/$string/reviews;
        # #     }
        # #     if ($request_method != GET) {
        # #         proxy_pass http://reviews-command/products/$string/reviews;
        # #     }
        # # }

        # location /reviews {
        #     if ($request_method = GET) {
        #         proxy_pass http://reviews-query;
        #     }
        #     if ($request_method = POST) {
        #         proxy_pass http://reviews-command;
        #     }
        #     if ($request_method = PUT) {
        #         proxy_pass http://reviews-command;
        #     }
        #     if ($request_method = DELETE) {
        #         proxy_pass http://reviews-command;
        #     }

        #     # These headers are often needed when using Nginx as a reverse proxy or load balancer
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;

        # }

        location /votes/getReviews {
            if ($request_method = GET) {
                proxy_pass http://votes-command;
            }
        }

        location /votes {
            if ($request_method = GET) {
                proxy_pass http://votes-query;
            }
            if ($request_method = POST) {
                proxy_pass http://votes-command;
            }
        }
    }
}